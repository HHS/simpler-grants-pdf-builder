# Generated by Django 5.0.8 on 2024-11-01 19:35

import json
import re

from django.db import migrations


def update_print_logs(apps, schema_editor):
    # Get the audit log model
    AuditLog = apps.get_model("easyaudit", "CRUDEvent")

    # Define regex patterns to capture ID and timestamp for both types
    test_pattern = r"PRINT \(TEST\): NOFO \(ID #(\d+)\) at (.+)"
    live_pattern = r"PRINT: NOFO \(ID #(\d+)\) at (.+)"

    # Fetch audit logs with 'PRINT' in `changed_fields`
    for log in AuditLog.objects.filter(changed_fields__contains="PRINT"):

        if re.match(test_pattern, log.changed_fields):
            # Handle 'TEST' print logs
            match = re.match(test_pattern, log.changed_fields)
            timestamp = match.group(2)

            # Construct JSON for 'test' print log
            log.changed_fields = json.dumps(
                {"action": "nofo_print", "print_mode": ["test"], "updated": [timestamp]}
            )

        elif re.match(live_pattern, log.changed_fields):
            # Handle 'LIVE' print logs
            match = re.match(live_pattern, log.changed_fields)
            timestamp = match.group(2)

            # Construct JSON for 'live' print log
            log.changed_fields = json.dumps(
                {"action": "nofo_print", "print_mode": ["live"], "updated": [timestamp]}
            )

        # Save the updated log entry
        log.save()


class Migration(migrations.Migration):

    dependencies = [
        ("nofos", "0072_alter_nofo_coach_alter_nofo_designer_and_more"),
    ]

    operations = [
        migrations.RunPython(update_print_logs),
    ]
