# Generated by Django 5.0.13 on 2025-05-07 22:01
from django.db import connection, migrations


def clean_easyaudit_deleted_nofos(apps, schema_editor):
    db_vendor = connection.vendor

    if db_vendor == "postgresql":
        with connection.cursor() as cursor:
            cursor.execute(
                """
                DELETE FROM easyaudit_crudevent 
                WHERE object_json_repr LIKE '%"model": "nofos.nofo"%'
                AND object_id::bigint NOT IN (SELECT id FROM nofos_nofo);
                """
            )
            cursor.execute(
                """
                DELETE FROM easyaudit_crudevent 
                WHERE object_json_repr LIKE '%"model": "nofos.section"%'
                AND object_id::bigint NOT IN (SELECT id FROM nofos_section);
                """
            )
            cursor.execute(
                """
                DELETE FROM easyaudit_crudevent 
                WHERE object_json_repr LIKE '%"model": "nofos.subsection"%'
                AND object_id::bigint NOT IN (SELECT id FROM nofos_subsection);
                """
            )

    elif db_vendor == "sqlite":
        with connection.cursor() as cursor:
            cursor.execute(
                """
                DELETE FROM easyaudit_crudevent 
                WHERE object_json_repr LIKE '%"model": "nofos.nofo"%'
                AND object_id NOT IN (SELECT CAST(id AS TEXT) FROM nofos_nofo);
            """
            )
            cursor.execute(
                """
                DELETE FROM easyaudit_crudevent 
                WHERE object_json_repr LIKE '%"model": "nofos.section"%'
                AND object_id NOT IN (SELECT CAST(id AS TEXT) FROM nofos_section);
            """
            )
            cursor.execute(
                """
                DELETE FROM easyaudit_crudevent 
                WHERE object_json_repr LIKE '%"model": "nofos.subsection"%'
                AND object_id NOT IN (SELECT CAST(id AS TEXT) FROM nofos_subsection);
            """
            )

    else:
        raise RuntimeError("Unsupported database type: " + db_vendor)


class Migration(migrations.Migration):

    dependencies = [
        ("nofos", "0103_nofos_update_foreign_keys_to_uuid"),
    ]

    operations = [
        migrations.RunPython(clean_easyaudit_deleted_nofos),
    ]
