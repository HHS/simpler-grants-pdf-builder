# Generated by Django 5.0.13 on 2025-05-07 21:15

import uuid

from django.db import connection, migrations, models


def promote_uuid_to_id_nofos(apps, schema_editor):
    db_vendor = connection.vendor

    if db_vendor == "postgresql":
        with connection.cursor() as cursor:
            # Step 1: Create a temp UUID column and populate it with existing UUID values
            cursor.execute("ALTER TABLE nofos_nofo ADD COLUMN temp_id UUID;")
            cursor.execute("UPDATE nofos_nofo SET temp_id = uuid;")

            cursor.execute("ALTER TABLE nofos_section ADD COLUMN temp_id UUID;")
            cursor.execute("UPDATE nofos_section SET temp_id = uuid;")

            cursor.execute("ALTER TABLE nofos_subsection ADD COLUMN temp_id UUID;")
            cursor.execute("UPDATE nofos_subsection SET temp_id = uuid;")

            # Step 2: Dynamically fetch and drop primary key constraints
            cursor.execute(
                """
                SELECT constraint_name 
                FROM information_schema.table_constraints 
                WHERE table_name='nofos_nofo' 
                AND constraint_type='PRIMARY KEY';
                """
            )
            nofo_pkey = cursor.fetchone()[0]
            cursor.execute(f"ALTER TABLE nofos_nofo DROP CONSTRAINT {nofo_pkey};")

            cursor.execute(
                """
                SELECT constraint_name 
                FROM information_schema.table_constraints 
                WHERE table_name='nofos_section' 
                AND constraint_type='PRIMARY KEY';
                """
            )
            section_pkey = cursor.fetchone()[0]
            cursor.execute(f"ALTER TABLE nofos_section DROP CONSTRAINT {section_pkey};")

            cursor.execute(
                """
                SELECT constraint_name 
                FROM information_schema.table_constraints 
                WHERE table_name='nofos_subsection' 
                AND constraint_type='PRIMARY KEY';
                """
            )
            subsection_pkey = cursor.fetchone()[0]
            cursor.execute(
                f"ALTER TABLE nofos_subsection DROP CONSTRAINT {subsection_pkey};"
            )

            # Step 3: Rename temp_id to id, and make it the primary key
            cursor.execute("ALTER TABLE nofos_nofo DROP COLUMN id;")
            cursor.execute("ALTER TABLE nofos_nofo RENAME COLUMN temp_id TO id;")
            cursor.execute("ALTER TABLE nofos_nofo ADD PRIMARY KEY (id);")

            cursor.execute("ALTER TABLE nofos_section DROP COLUMN id;")
            cursor.execute("ALTER TABLE nofos_section RENAME COLUMN temp_id TO id;")
            cursor.execute("ALTER TABLE nofos_section ADD PRIMARY KEY (id);")

            cursor.execute("ALTER TABLE nofos_subsection DROP COLUMN id;")
            cursor.execute("ALTER TABLE nofos_subsection RENAME COLUMN temp_id TO id;")
            cursor.execute("ALTER TABLE nofos_subsection ADD PRIMARY KEY (id);")

    elif db_vendor == "sqlite":
        pass

    else:
        raise RuntimeError("Unsupported database type: " + db_vendor)


class Migration(migrations.Migration):

    dependencies = [
        ("nofos", "0105_nofos_easyaudit_uuid"),
    ]

    operations = [
        migrations.RunPython(promote_uuid_to_id_nofos),
        migrations.AlterField(
            model_name="nofo",
            name="id",
            field=models.UUIDField(
                default=uuid.uuid4,
                editable=False,
                primary_key=True,
                serialize=False,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="id",
            field=models.UUIDField(
                default=uuid.uuid4,
                editable=False,
                primary_key=True,
                serialize=False,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="subsection",
            name="id",
            field=models.UUIDField(
                default=uuid.uuid4,
                editable=False,
                primary_key=True,
                serialize=False,
                unique=True,
            ),
        ),
    ]
